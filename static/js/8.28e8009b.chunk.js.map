{"version":3,"sources":["routes/footer/index.js"],"names":["Footer","props","TextArea","Input","getfooterdata","useSelector","crud","update","useState","add1","setadd1","add2","setadd2","tel","settel","edit","setedit","stop","setstop","stop1","setstop1","custom","setcustom","deleteid","dispatch","getrole","useDispatch","Form","useForm","form","deletesuccess","setdeletesuccess","setdeletes","useEffect","getfooter","setFieldsValue","data","mobile","addressline1","addressline2","clearupdate","className","title","initialValues","remember","name","onFinish","values","putfooter","resetFields","onFinishFailed","errorInfo","console","log","xl","lg","md","sm","xs","Item","rules","required","message","rows","value","onChange","e","target","placeholder","type","onKeyUp","replace","htmlType","show","showCancel","confirmBtnText","cancelBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onConfirm","roledelete","id","status","onCancel","success"],"mappings":"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","file":"static/js/8.28e8009b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Divider, Table,Col, Row,Button, Checkbox, Form, Input, Select } from \"antd\";\r\nimport axios from 'axios';\r\nimport {  putrole,getrole,roleedit,clearrole,updaterole,roledelete,deleted,putfooter,getfooter,clearupdate } from \"../../appRedux/actions/Crud\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nconst Footer = (props) => {\r\n    const { TextArea } = Input;\r\n    const getfooterdata = useSelector(({ crud }) => crud.getfooterdata);\r\n    const update = useSelector(({ crud }) => crud.update);\r\n    const [add1, setadd1] = useState('');\r\n    const [add2, setadd2] = useState('');\r\n    const [tel, settel] = useState('');\r\n    const [edit, setedit] = useState(0);\r\n    const [stop, setstop] = useState(0);\r\n    const [stop1, setstop1] = useState(0);\r\n    const [custom, setcustom] = useState(false);\r\n    const [deleteid, setdeleteid] = useState(false);\r\n    const red_data = useSelector(({ crud }) => crud.getrole);\r\n    const dispatch = useDispatch();\r\n    const [form] = Form.useForm();\r\n    const [deletesuccess, setdeletesuccess] = useState(false);\r\n    const [deletes, setdeletes] = useState(0);\r\n    useEffect(() => {\r\n        if (stop === 0) {\r\n            dispatch(getfooter())\r\n            setstop(1)\r\n        }\r\n    })\r\n    useEffect(()=>{\r\n      if(getfooterdata !== ''){        \r\n          if(stop1 == 0){\r\n            form.setFieldsValue({\r\n                tel: getfooterdata.data[0].mobile,\r\n                add1: getfooterdata.data[0].addressline1,\r\n                add2: getfooterdata.data[0].addressline2\r\n              })\r\n              settel(getfooterdata.data[0].mobile)\r\n              setadd1(getfooterdata.data[0].addressline1)\r\n              setadd2(getfooterdata.data[0].addressline2)\r\n              setstop1(1)\r\n          }        \r\n        }\r\n    })\r\n    useEffect(()=>{\r\n        if(update == 1){  \r\n            if(edit == 1){\r\n              form.setFieldsValue({\r\n                  tel: getfooterdata.data[0].mobile,\r\n                  add1: getfooterdata.data[0].addressline1,\r\n                  add2: getfooterdata.data[0].addressline2\r\n                })\r\n                settel(getfooterdata.data[0].mobile)\r\n                setadd1(getfooterdata.data[0].addressline1)\r\n                setadd2(getfooterdata.data[0].addressline2)\r\n                setedit(0)\r\n                dispatch(clearupdate())\r\n            }\r\n\r\n          }\r\n      })\r\n\r\n\r\n    // useEffect(()=>{\r\n    //   if(deleteid != '' ){\r\n    //     setcustom(true)\r\n    //   }\r\n    // })\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n      const onFinish = values => {\r\n\r\n        dispatch(putfooter(\r\n          {\r\n            \"addressline1\": add1,\r\n            \"addressline2\": add2,\r\n            \"mobile\" : tel\r\n          }\r\n        )) \r\n        setedit(1)\r\n        form.resetFields();       \r\n      };\r\n\r\n// if(getfooterdata.length > 0){\r\n//     alert(15)\r\n// }\r\n\r\n    function deleteconfirm() {\r\n      setcustom(false)\r\n      dispatch(roledelete({id : deleteid , status : 2}))\r\n      setdeletes(1)\r\n    }\r\n    function deletecancel() {\r\n      setcustom(false)\r\n    }\r\n    function deletestatus() {\r\n      setdeletesuccess(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Card className={`footer-card`} title=\"Footer\">\r\n            <Form\r\n        form={form}\r\n        initialValues={{ remember: true }}\r\n        name=\"basic\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        className=\"gx-signin-form gx-form-row0\">\r\n        <Row>\r\n\r\n          <Col xl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <Form.Item\r\n              rules={[{ required: true, message: 'Address is required' }]} name=\"add1\">\r\n              <TextArea rows={4} value={add1} onChange={(e) => {\r\n                setadd1(e.target.value)\r\n              }} placeholder=\"Address Line1....\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <Form.Item\r\n              rules={[{ required: true, message: 'Address is required' }]} name=\"add2\">\r\n              <TextArea rows={4} value={add2} onChange={(e) => {\r\n                setadd2(e.target.value)\r\n                \r\n              }} placeholder=\"Address Line2....\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <Form.Item\r\n              rules={[{ required: true, message: 'Mobile is required' }]} name=\"tel\">\r\n              <Input type=\"text\" value={tel} onKeyUp={(e) => {\r\n                                e.target.value = e.target.value.replace(/[^0-9+]/g, '');\r\n                            }} onChange={(e) => {\r\n                settel(e.target.value)\r\n              }} placeholder=\"Tel/Mobile\" />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Col xl={4} lg={4} md={4} sm={24} xs={24}>\r\n            <Form.Item>\r\n              <Button type=\"primary\" className=\"gx-mb-0\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n      </Form>\r\n            </Card>\r\n            <SweetAlert show={custom}\r\n          custom\r\n          showCancel\r\n          confirmBtnText={`OK`}\r\n          cancelBtnText={`Cancel`}\r\n          confirmBtnBsStyle=\"primary\"\r\n          cancelBtnBsStyle=\"default\"\r\n          // customIcon={\"https://via.placeholder.com/500X330\"}\r\n          title={`Do you want to delete?`}\r\n          onConfirm={deleteconfirm}\r\n          onCancel={deletecancel}\r\n        >\r\n          {/* <IntlMessages id=\"sweetAlerts.youWillFind\"/> */}\r\n        </SweetAlert>\r\n        <SweetAlert show={deletesuccess} success title={`Deleted Successfully`}\r\n          onConfirm={deletestatus}>\r\n          {/* <IntlMessages id=\"sweetAlerts.btnClicked\"/> */}\r\n        </SweetAlert>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer; \r\n"],"sourceRoot":""}