{"version":3,"sources":["routes/rolepermission/index.js"],"names":["Rolepermission","props","rolepermissionid","useSelector","crud","rolepermission","ifdeleted","deletepermissionid","roles","getrole","pagepermissions","pagepermission","useState","role","setrole","edit","setedit","stop","setstop","custom","setcustom","deleteid","setdeleteid","dispatch","useDispatch","Form","useForm","form","deletesuccess","setdeletesuccess","deletes","setdeletes","permissionsmapped","setpermissionsmapped","permissionid","setpermissionid","swarning","setswarning","end","setend","turnoff","setturnoff","Option","Select","Edit","e","data","length","clearrolepermission","editrolepermission","target","getAttribute","access","checked","Delete","useEffect","getpagepermission","getrolepermission","cleardeleterolepermission","setFieldsValue","role_id","role_permission","alert","i","document","getElementById","old","indexOf","droid2","filter","item","map","push","page","menu","action","style","display","type","marginRight","height","onChange","id","data-id","index","key","data1","onClick","className","datas2","console","log","role_data","includes","value","initialValues","remember","name","onFinish","values","updatepagepermission","putpagepermission","checks","getElementsByTagName","resetFields","onFinishFailed","errorInfo","xl","lg","md","sm","xs","title","Item","rules","required","message","newCurrency","placeholder","disabled","pagination","columns","dataIndex","dataSource","htmlType","show","showCancel","confirmBtnText","cancelBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onConfirm","deletepermission","status","onCancel","success","warning"],"mappings":"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","file":"static/js/13.fbc1b04a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Divider, Table, Col, Row, Button, Checkbox, Form, Input, Select } from \"antd\";\r\nimport axios from 'axios';\r\nimport {cleardeleterolepermission, getpagepermission, getrole, putpagepermission, editrolepermission,getrolepermission,updatepagepermission,deletepermission,clearrolepermission } from \"../../appRedux/actions/Crud\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nconst Rolepermission = (props) => {\r\n    const rolepermissionid = useSelector(({ crud }) => crud.rolepermissionid);\r\n    const rolepermission = useSelector(({ crud }) => crud.rolepermission);\r\n    const ifdeleted = useSelector(({ crud }) => crud.deletepermissionid);\r\n    const roles = useSelector(({ crud }) => crud.getrole);\r\n    const pagepermissions = useSelector(({ crud }) => crud.pagepermission);\r\n    const [role, setrole] = useState('');\r\n    const [pass, setpass] = useState('');\r\n    const [name, setname] = useState('');\r\n    const [contact, setcontact] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [edit, setedit] = useState(0);\r\n    const [stop, setstop] = useState(0);\r\n    const [custom, setcustom] = useState(false);\r\n    const [deleteid, setdeleteid] = useState(false);\r\n    const red_data = useSelector(({ crud }) => crud.getrole);\r\n    const dispatch = useDispatch();\r\n    const [form] = Form.useForm();\r\n    const [deletesuccess, setdeletesuccess] = useState(false);\r\n    const [deletes, setdeletes] = useState(0);\r\n    const [datas, setdatas] = useState([]);\r\n    const [edits, setedits] = useState('');\r\n    const [forhk, setforhk] = useState(0);\r\n    const [permissionsmapped, setpermissionsmapped] = useState([]);\r\n    const [permissionid, setpermissionid] = useState('');\r\n    const [swarning, setswarning] = useState(false);\r\n    const [end, setend] = useState(0);\r\n    const [turnoff, setturnoff] = useState(false);\r\n    const { Option } = Select;\r\n    useEffect(() => {\r\n        if (stop === 0) {\r\n            dispatch(getrole())\r\n            dispatch(getpagepermission())\r\n            dispatch(getrolepermission())\r\n        }\r\n        setstop(1)\r\n    })\r\n    useEffect(() => {\r\n        if (ifdeleted == 'success') {\r\n            if (deletes != 0) {\r\n                setdeletesuccess(true)\r\n                dispatch(cleardeleterolepermission(''))\r\n                setdeletes(1)\r\n            }\r\n        }\r\n    })\r\n    useEffect(() => {\r\n    \r\n    })\r\n    if (rolepermissionid !== '') {\r\n        \r\n        if (edit !== 0) {            \r\n            if ((rolepermissionid != 'no data found')) {\r\n                form.setFieldsValue({\r\n                    role: rolepermissionid.data[0].role,\r\n                })\r\n                // console.log(rolepermissionid.data[0].role_permission)\r\n                setrole(rolepermissionid.data[0].role_id)\r\n                setpermissionsmapped(rolepermissionid.data[0].role_permission)\r\n                setend(0)\r\n\r\n            } else {\r\n                alert('there is no record')\r\n            }\r\n            setturnoff(true)\r\n            setedit(0)\r\n        }\r\n    }\r\nuseEffect(()=>{\r\n\r\n    if(rolepermissionid != ''){\r\n        if(end === 0){\r\n\r\n            setpermissionsmapped([])\r\n            for(let i=0;i<rolepermissionid.data[0].role_permission.length;i++){\r\n                if(document.getElementById(rolepermissionid.data[0].role_permission[i])){\r\n                    document.getElementById(rolepermissionid.data[0].role_permission[i]).checked = true\r\n                    setpermissionsmapped(old => [...old, rolepermissionid.data[0].role_permission[i]])\r\n                }\r\n                // alert(rolepermissionid.data[0].role_permission[i])\r\n            }\r\nsetend(1)\r\n\r\n        }\r\n\r\n        \r\n    }\r\n})\r\n    useEffect(() => {\r\n        if (permissionid !== '') {\r\n\r\n            // let permission = permissionsmapped;\r\n            if (permissionsmapped.indexOf(permissionid) == -1) {\r\n                // let pmapped = permissionsmapped;\r\n                // permission.push(permissionid);\r\n                setpermissionsmapped(old => [...old, permissionid])\r\n            }\r\n            if (permissionsmapped.indexOf(permissionid) != -1) {\r\n                // let pmapped = permissionsmapped;\r\n                // permission.push(permissionid);\r\n                let droid  = permissionsmapped;\r\n                let droid2 = []\r\n                droid.filter((item)=>{\r\n                    // alert(permissionid)\r\n                    return item != permissionid \r\n                }).map((item)=>{\r\n                    droid2.push(item)\r\n                    return item\r\n                })\r\n                // alert(droid2.length)\r\n                // // console.log(droid)\r\n                setpermissionsmapped(droid2)\r\n            }\r\n        }\r\n\r\n\r\n    }, [permissionid])\r\n    function Edit(e) {\r\n        if(rolepermissionid != \"\"){\r\n            if(rolepermissionid != \"no data found\"){\r\n            //  alert(rolepermissionid.data.length)\r\n                if(rolepermissionid.data.length > 0){\r\n                    dispatch(clearrolepermission())\r\n\r\n                }\r\n            }\r\n        }\r\n        dispatch(editrolepermission(e.target.getAttribute('data-id')))\r\n        setedit(1)\r\n    }\r\n\r\n    function access(e) {\r\n        // if(e.target.value == 'on'){\r\n        //     e.target.value = 'off'\r\n        // }\r\n        // let pmapped = permissionsmapped\r\n        if (e.target.checked == true) {\r\n            setpermissionid(e.target.getAttribute('data-id'))\r\n\r\n        }\r\n        if (e.target.checked == false) {\r\n            setpermissionid(e.target.getAttribute('data-id'))\r\n\r\n        }\r\n    }\r\n\r\n    function Delete(e) {\r\n        setdeleteid(e.target.getAttribute('data-id'))\r\n        setcustom(true)\r\n    }\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    const onFinish = values => {\r\n        \r\n        if (rolepermissionid != '') {\r\n            if (permissionsmapped.length == 0) {\r\n                setswarning(true)\r\n            }\r\n            else {\r\n                dispatch(updatepagepermission({\r\n                    role_id: role,\r\n                    role_permission: permissionsmapped,\r\n                    id : rolepermissionid.data[0].id\r\n                }))\r\n            }\r\n            setturnoff(false)\r\n        }\r\n        else if (rolepermissionid == '') {\r\n\r\n            if (permissionsmapped.length == 0) {\r\n                setswarning(true)\r\n            }\r\n            else {\r\n                dispatch(putpagepermission({\r\n                    role_id: role,\r\n                    role_permission: permissionsmapped\r\n                }))\r\n            }\r\n            setedit(0);\r\n        }\r\n        // alert(permissionsmapped.length)\r\n\r\n        let checks = document.getElementsByTagName('input');\r\n        for(let i=0;i<checks.length;i++)\r\n        {\r\n            if(checks[i].getAttribute('type') == \"checkbox\")\r\n            {\r\n                checks[i].checked = false;\r\n            }\r\n        }\r\n        form.resetFields();\r\n\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'Page',\r\n            dataIndex: 'page',\r\n            key: 'page',\r\n        },\r\n\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n        }\r\n    ];\r\n    let data = [];\r\n    // alert(typeof pagepermissions)\r\n    if (pagepermissions.length > 0) {\r\n        if (rolepermissionid !== '') {\r\n            // rolepermissionid.data[0].role_permission[0]\r\n            data = pagepermissions.map((item, i) => {\r\n                return {\r\n                    page: item.menu,\r\n                    action: (<><div style={{ display: 'flex' }}><input type=\"checkbox\" style={{ marginRight: '7px', height: '15px' }} onChange={access} id={item.id} data-id={item.id} /></div></>),\r\n                    index: item.id,\r\n                    key: item.id\r\n                }\r\n            });\r\n        } else {            \r\n            data = pagepermissions.map((item, i) => {\r\n                return {\r\n                    page: item.menu,\r\n                    action: (<><div style={{ display: 'flex' }}><input type=\"checkbox\" style={{ marginRight: '7px', height: '15px' }} onChange={access} data-id={item.id} /></div></>),\r\n                    index: item.id,\r\n                    key: item.id\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const columns1 = [\r\n        {\r\n            title: 'Role',\r\n            dataIndex: 'role',\r\n            key: 'role',\r\n        },\r\n\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n        }\r\n    ];\r\n    let data1 = [];\r\n\r\n    if (rolepermission.length > 0) {\r\n        data1 = rolepermission.map((item, i) => {\r\n            return {\r\n                role: item.role,\r\n                action: (<><div style={{ display: 'flex' }}><i style={{ marginRight: '7px', height: '15px' }} onClick={Edit} data-id={item.id} className=\"icon icon-edit\" /><i data-id={item.id} onClick={Delete} style={{ height: '15px' }} className=\"icon icon-trash\" /></div></>),\r\n                index: item.id,\r\n                key: item.id\r\n            }\r\n        });\r\n    }\r\n\r\n\r\nlet datas2 = [];\r\nif (rolepermission.length > 0) {\r\n    datas2 = rolepermission.map((item, i) => {\r\n        return item.role_id\r\n    });\r\n}\r\nconsole.log('roles',datas2)\r\n    function deleteconfirm() {\r\n        setcustom(false)\r\n        dispatch(deletepermission({ id: deleteid, status: 2 }))\r\n        setdeletes(1)\r\n    }\r\n    function deletecancel() {\r\n        setcustom(false)\r\n    }\r\n    function confirmwarning() {\r\n        setswarning(false)\r\n    }\r\n    function deletestatus() {\r\n\r\n        // setdatas(newda)\r\n        setdeleteid('')\r\n        setdeletesuccess(false)\r\n    }\r\n    const onCurrencyChange = newCurrency => {\r\n        setrole(newCurrency)\r\n    };\r\n    let role_data = []\r\n    if (roles.length > 0) {\r\n        \r\n        role_data = roles.filter((item)=>{\r\n            return datas2.includes(`${item.id}`) != true\r\n        }).map((item, i) => {          \r\n            return (<Option key={item.id} value={item.id}>{item.role}</Option>)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                form={form}\r\n                initialValues={{ remember: true }}\r\n                name=\"usercreation\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                className=\"gx-signin-form gx-form-row0\">\r\n                <Row>\r\n                    <Col xl={12} lg={12} md={12} sm={24} xs={24}>\r\n                        <Card title=\"Roles capability\">\r\n                            <Form.Item\r\n                                rules={[{ required: true, message: 'This field is required' }]} name=\"role\">\r\n                                <Select\r\n                                    value={role}\r\n                                    onChange={onCurrencyChange}\r\n                                    placeholder=\"Role\"\r\n                                    disabled = {turnoff}\r\n                                >\r\n                                    {role_data}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Table  pagination={false} className=\"gx-table-responsive\" columns={columns} dataSource={data} />\r\n\r\n                            <Col xl={4} lg={4} md={4} sm={24} xs={24}>\r\n                                <Form.Item>\r\n                                    <Button type=\"primary\" className=\"gx-mb-0\" htmlType=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={12} lg={12} md={12} sm={24} xs={24}>\r\n                        <Card title=\"List Of Roles Capability\">\r\n                            <Table className=\"gx-table-responsive\" columns={columns1} dataSource={data1} />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            <SweetAlert show={custom}\r\n                custom\r\n                showCancel\r\n                confirmBtnText={`OK`}\r\n                cancelBtnText={`Cancel`}\r\n                confirmBtnBsStyle=\"primary\"\r\n                cancelBtnBsStyle=\"default\"\r\n                // customIcon={\"https://via.placeholder.com/500X330\"}\r\n                title={`Do you want to delete?`}\r\n                onConfirm={deleteconfirm}\r\n                onCancel={deletecancel}\r\n            >\r\n                {/* <IntlMessages id=\"sweetAlerts.youWillFind\"/> */}\r\n            </SweetAlert>\r\n            <SweetAlert show={deletesuccess} success title={`Deleted Successfully`}\r\n                onConfirm={deletestatus}>\r\n                {/* <IntlMessages id=\"sweetAlerts.btnClicked\"/> */}\r\n            </SweetAlert>\r\n            <SweetAlert show={swarning} warning title={`Select any page for this role `}\r\n                onConfirm={confirmwarning}>\r\n                {/* <IntlMessages id=\"sweetAlerts.btnClicked\"/> */}\r\n            </SweetAlert>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rolepermission; \r\n"],"sourceRoot":""}