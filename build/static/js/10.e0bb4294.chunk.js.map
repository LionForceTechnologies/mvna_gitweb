{"version":3,"sources":["routes/pagecreation/index.js"],"names":["PageCreation","props","useState","stop","setstop","red_data","useSelector","crud","data","dispatch","useDispatch","Edit","e","getpage","target","getAttribute","useEffect","getdata","length","map","item","i","rts","menu","toUpperCase","action","style","display","to","url","split","join","id","onClick","data-id","marginLeft","index","key","title","className","columns","dataIndex","dataSource"],"mappings":"yMAgEeA,UAxDM,SAACC,GAAW,IAAD,EACJC,mBAAS,IADL,gCAEJA,mBAAS,IAFL,gCAGJA,mBAAS,IAHL,mBAGrBC,EAHqB,KAGfC,EAHe,KAItBC,EAAWC,aAAY,qBAAGC,KAAgBC,QAC1CC,EAAWC,cAOjB,SAASC,EAAKC,GACVH,EAASI,YAAQD,EAAEE,OAAOC,aAAa,aAP3CC,qBAAU,WACO,IAATb,GACAM,EAASQ,eAEbb,EAAQ,MAQZ,IAaII,EAAO,GAgBX,OAfIH,EAASa,OAAS,IAClBV,EAAOH,EAASc,KAAI,SAACC,EAAMC,GACvB,IAAIC,EAAM,IAIV,MAH8B,QAA3BF,EAAKG,KAAKC,gBACTF,EAAM,QAEH,CACHC,KAAMH,EAAKG,KAEXE,OAAS,oCAAE,yBAAKC,MAAO,CAAEC,QAAS,SAAU,kBAAC,IAAD,CAAMC,GAAE,uBAAkBR,EAAKS,IAAIC,MAAM,KAAKC,KAAK,IAA3C,eAAqDX,EAAKY,IAAMC,QAAStB,EAAMuB,UAASd,EAAKY,IAArG,gBAA6H,kBAAC,IAAD,CAAMJ,GAAE,UAAKN,EAAIQ,MAAM,KAAKC,KAAK,IAAzB,eAAmCX,EAAKY,IAAMN,MAAO,CAACS,WAAY,QAAWD,UAASd,EAAKY,IAAnG,gBACzKI,MAAOhB,EAAKY,GACZK,IAAKjB,EAAKY,QAKlB,6BACI,kBAAC,IAAD,CAAMM,MAAM,SACR,kBAAC,IAAD,CAAOC,UAAU,sBAAsBC,QAhCnC,CACZ,CACIF,MAAO,YACPG,UAAW,OACXJ,IAAK,QAGT,CACIC,MAAO,SACPG,UAAW,SACXJ,IAAK,WAsBwDK,WAAYlC","file":"static/js/10.e0bb4294.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Divider, Table } from \"antd\";\r\nimport axios from 'axios';\r\nimport { Col, Row } from \"antd\";\r\nimport {  getdata, seteditor, getpage} from \"../../appRedux/actions/Crud\";\r\n\r\nconst PageCreation = (props) => {\r\n    const [menu, setmenu] = useState('');\r\n    const [edit, setedit] = useState(0);\r\n    const [stop, setstop] = useState(0);\r\n    const red_data = useSelector(({ crud }) => crud.data);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (stop === 0) {\r\n            dispatch(getdata())\r\n        }\r\n        setstop(1)\r\n    })\r\n    function Edit(e) {\r\n        dispatch(getpage(e.target.getAttribute('data-id')))        \r\n    }\r\n    function Delete(e) {\r\n\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'Menu Name',\r\n            dataIndex: 'menu',\r\n            key: 'menu',\r\n        },\r\n\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n        }\r\n    ];\r\n    let data = [];\r\n    if (red_data.length > 0) {\r\n        data = red_data.map((item, i) => {\r\n            let rts = '/'\r\n            if(item.menu.toUpperCase() == 'HOME'){\r\n                rts = '/web'\r\n            }\r\n            return {\r\n                menu: item.menu,\r\n                // <i data-id={item.id} onClick={Delete} style={{ height: '15px', marginLeft: '15px' }} className=\"icon icon-trash\" />\r\n                action: (<><div style={{ display: 'flex' }}><Link to={`/admin/editor${item.url.split(\" \").join(\"\")}?id=${item.id}`} onClick={Edit} data-id={item.id} >Go to Editor</Link><Link to={`${rts.split(\" \").join(\"\")}?id=${item.id}`} style={{marginLeft: '15px' }}  data-id={item.id} >Go to Page</Link></div></>),\r\n                index: item.id,\r\n                key: item.id\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <Card title=\"Pages\">\r\n                <Table className=\"gx-table-responsive\" columns={columns} dataSource={data} />\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageCreation; \r\n"],"sourceRoot":""}